#include "Level.h"
#include "Spawner.h"
#include "Tile.h"
#include "Collisions.h"

Level::Level()
{	
}

void Level::Initialize(std::vector<GameObject*>* mpEntities, const std::string& layout) const
{
	Collisions::Clear();
	TileMap::Clear();
	for (GameObject*& entity : *mpEntities)
	{
		delete entity;
	}
	mpEntities->clear();
	TileMap::Initialize(layout);
	Spawner spawn(mpEntities, layout);
}

FirstLevel::FirstLevel(std::vector<GameObject*>* mpEntities)
{
	std::string layout = "";

	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append(".....................................................................wl.");
	layout.append("........................................................................");
	layout.append("#################.........................................l..l..........");
	layout.append("..................#....................l........l.l...............######");
	layout.append(".....................####................................######.........");
	layout.append("............l....#.......................l....#######...................");
	layout.append(".......########........l..l....l.....#######.....l...............#####..");
	layout.append(".....................############.......................................");
	layout.append(".........#.....l................##......................................");
	layout.append("######.......#####..............###.....l..l..l...................######");
	layout.append("........#####.......l........k.......##############.....................");
	layout.append(".....k..k.........#####..............#..............########............");
	layout.append(".....................................#.....................####.........");
	layout.append(".....######..####.........k..........#..............................###.");
	layout.append("...k..............l..#################...........................####...");
	layout.append("#######......p.................k........................###.............");
	layout.append("########################################################################");

	Initialize(mpEntities, layout);
}

SecondLevel::SecondLevel(std::vector<GameObject*>* mpEntities)
{
	std::string layout = "";
	
	layout.append("....................................................................#...");
	layout.append(".......................................................l........p...#...");
	layout.append("......................................................l..############...");
	layout.append("........................................................l....#..........");
	layout.append("..............................................l..............#..........");
	layout.append("...........................................###########.......#..........");
	layout.append(".............................................................#..........");
	layout.append(".............................................................#..........");
	layout.append(".........................................l...................#..........");
	layout.append("...........................................l.................#..........");
	layout.append(".....................................l.l............l........#..........");
	layout.append("....................................l........................#..........");
	layout.append("........l..............llll.......l...........lll.........l..#..........");
	layout.append("....................l............l........lll.......l........#..........");
	layout.append(".......ll.ll....l..l.l..l.l.l..l......lll....l..l......l.....#..........");
	layout.append("....................l......l......lll........l.......ll......#..........");
	layout.append("...w........l.l........l.........l....................l......#..........");
	layout.append(".......l.l..........l..........................ll............#..........");
	layout.append("................l........l...................................#..........");
	layout.append("########################################################################");

	Initialize(mpEntities, layout);
}

ThirdLevel::ThirdLevel(std::vector<GameObject*>* mpEntities)
{
	std::string layout = "";

	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("..............###############...##############.................w........");
	layout.append("..................................................####..................");
	layout.append("......####..............................................................");
	layout.append(".........###..........................................###########.......");
	layout.append("............#####.....................k..k..k...........................");
	layout.append("................###########......................k..k....k..............");
	layout.append("..............................##############....................k.......");
	layout.append("............................kkkkk..............###############..........");
	layout.append("..........###########......................................k.......####.");
	layout.append(".......................###########..kk.......kk.......kk.k...k..#####...");
	layout.append("...............k............................................############");
	layout.append(".....k...k...k......kk..................##################..............");
	layout.append("......k...........................####..................................");
	layout.append(".......k..#####################.........................................");
	layout.append("..p........k............................................................");
	layout.append("########################################################################");

	Initialize(mpEntities, layout);
}

ForthLevel::ForthLevel(std::vector<GameObject*>* mpEntities)
{
	std::string layout = "";

	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("..........................#.#.###.#.#...................................");
	layout.append("..........................#.#.#.#.#.#...................................");
	layout.append("...........................#..#p#.#.#...................................");
	layout.append("...........................#..###.###...................................");
	layout.append("........................................................................");
	layout.append(".........................#...#.#.##..#..................................");
	layout.append(".........................#.#.#.#.#.#.#..................................");
	layout.append("..........................#.#..#.#..##.#................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("........................................................................");
	layout.append("########################################################################");

	Initialize(mpEntities, layout);
}

void LevelManager::LoadNextLevel(std::vector<GameObject*>* mpEntities)
{
	const int& level = ++GetInstance().mLevel;
	if (level == 1)
	{
		FirstLevel level(mpEntities);
	}
	else if (level == 2)
	{
		SecondLevel level(mpEntities);
	}
	else if (level == 3)
	{
		ThirdLevel level(mpEntities);
	}
	else if (level == 4)
	{
		ForthLevel level(mpEntities);
	}
}



LevelManager& LevelManager::GetInstance()
{
	static LevelManager levelManager;
	return levelManager;
}

